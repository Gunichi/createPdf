import { Flex, Input, Textarea, Button, FormControl, Box } from '@chakra-ui/react'
import jsPDF from 'jspdf'
import { PDFDownloadLink, Document, Page, Text, View, Image } from '@react-pdf/renderer';
import { useForm } from 'react-hook-form'
import { useEffect, useState } from 'react'
import { StyleSheet } from '@react-pdf/renderer'
import dynamic from 'next/dynamic'


export default function Home() {

  const PDFViewer = dynamic(() => import('@react-pdf/renderer').then((module) => module.PDFViewer), {
    ssr: false,
  });

  const PDFLink = dynamic(() => import('@react-pdf/renderer').then((module) => module.PDFDownloadLink), {
    ssr: false,
  });

  const { register, handleSubmit } = useForm()
  const [title, setTitle] = useState('');
  const [lastName, setLastName] = useState('');
  const [fontColor, setFontColor] = useState('#00A3D9');
  const [image, setImage] = useState('');

  const styles = StyleSheet.create({
    page: {
      flexDirection: 'row',
      backgroundColor: fontColor
    },
    section: {
      margin: 10,
      padding: 10,
      flexGrow: 1,
      textAlign: 'center',
      width: '100%',
      height: '100%',
    },
    title: {
      color: 'white',
      fontSize: 35,
      marginTop: 20,
    }
  });


  const MyDocument = (
    <Document >
      <Page size="A4" style={styles.page}>
        <View style={styles.section}>
          <View style={{ alignItems: "center", justifyContent: "center" }}>
            <Image src={image} style={{width: 100, height: 100 }} />
          </View>
          <Text style={styles.title}>
            {title}
          </Text>
          <View style={{display: "flex", flexDirection: "row", marginBottom: 70}}>
            <Text style={{flex: 1}}>Left</Text>
            <Text style={{flex: 1}}>Right</Text>
          </View>
        </View>
      </Page>
    </Document>
  );

  const PDFView = () => {
    return (
      <div style={{ width: '100%', height: '600px' }}>
        <PDFViewer width="100%" height="100%">
          {MyDocument}
        </PDFViewer>
      </div>
    );
  };

  return (
    <>
      {/* <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head> */}

      <Box w="100%" h="100%" bg="gray.100" p="4">
        <Flex direction="column" align="center" justify="center" h="100vh">      
          <form>
            <FormControl mb="2">
              <Input id="Text" placeholder="Text" {...register('Text')} onChange={(e) => setTitle(e.target.value)} mb="2" />
              <Input id="image" placeholder="image" {...register('image')} onChange={(e) => setImage(e.target.value)} mb="2" />
              <Input type="color" id="fontColor" name="fontColor" value={fontColor} onChange={(e) => setFontColor(e.target.value)} mb="2" />
              <Button mb="2">
                <PDFLink document={MyDocument} fileName="meu-pdf.pdf">
                Baixar PDF
                </PDFLink>        
              </Button>
            </FormControl>
          </form>
        </Flex>
        <PDFView />
      </Box>
    </>
  )
}
